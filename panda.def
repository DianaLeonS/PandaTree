% INCLUDES

#include "TLorentzVector.h"
#include "TVector2.h"

#include <cmath>

% CONSTANTS

enum PhotonL1Object {
  fSEG34IorSEG40,
  fSEG40IorSJet200,
  fSEG34IorSEG40IorSJet200,
  fSEG24,
  fSEG30,
  fSEG40
};

enum PhotonHLTObject {
  fPh120,
  fPh135,
  fPh165HE10,
  fPh175,
  fPh22EBR9Iso,
  fPh36EBR9Iso,
  fPh50EBR9Iso,
  fPh75EBR9Iso,
  fPh90EBR9Iso,
  fPh120EBR9Iso
};

enum ElectronHLTObject {
  fEl23Loose,
  fEl27Loose,
  fEl120Ph,
  fEl135Ph,
  fEl165HE10Ph,
  fEl175Ph,
  fEl22EBR9IsoPh,
  fEl36EBR9IsoPh,
  fEl50EBR9IsoPh,
  fEl75EBR9IsoPh,
  fEl90EBR9IsoPh,
  fEl120EBR9IsoPh
};

enum MuonHLTObject {
  fMu20,
  fMuTrk20,
  fMu24,
  fMu27
};

unsigned const nMaxHLTObjects(nElectronHLTObjects);

ASSERT nMaxHLTObjects >= nPhotonHLTObjects
ASSERT nMaxHLTObjects >= nElectronHLTObjects
ASSERT nMaxHLTObjects >= nMuonHLTObjects

% OBJECTS

[Particle]
pt/F
eta/F
phi/F
TLorentzVector p4() const { TLorentzVector p4; p4.SetPtEtaPhiM(pt, eta, phi, m()); return p4; }
double e() const { return std::sqrt(std::pow(pt * std::cosh(eta), 2.) + m() * m()); }
double p() const { return pt * std::cosh(eta); }
double px() const { return pt * std::cos(phi); }
double py() const { return pt * std::sin(phi); }
double pz() const { return pt * std::sinh(eta); }
virtual double m() const { return 0.; }
double dEta(Particle const& p) const { return eta - p.eta; }
double dPhi(Particle const& p) const { return TVector2::Phi_mpi_pi(phi - p.phi); }
double dR2(Particle const& p) const { double d1(dEta(p)); double d2(dPhi(p)); return d1 * d1 + d2 * d2; }
double dR(Particle const& p) const { return std::sqrt(dR2(p)); }

[ParticleM>Particle]
mass/F
double m() const override { return mass; }

[GenParticle>ParticleM]
pdgid/I
parent/GenParticleRef

[PFCand>ParticleM]
q/S
puppiW/F
puppiWNoLep/F
pftype/I
TLorentzVector puppiP4() const { TLorentzVector p4; p4.SetPtEtaPhiM(pt * puppiW, eta, phi, m() * puppiW); return p4; }
TLorentzVector puppiNoLepP4() const { TLorentzVector p4; p4.SetPtEtaPhiM(pt * puppiWNoLep, eta, phi, m() * puppiWNoLep); return p4; }

[SuperCluster]
rawPt/F
eta/F
phi/F

[Lepton>Particle]
q/S
loose/O
medium/O
tight/O
chiso/F
nhiso/F
phoiso/F
puiso/F
tauDecay/O
hadDecay/O
matchedGen/GenParticleRef
virtual double combiso() const { return 0.; }

[Electron>Lepton]
chisoPh/F
nhisoPh/F
phisoPh/F
ecaliso/F
hcaliso/F
isoPUOffset/F
sieie/F
sipip/F
hOverE/F
veto/O
matchHLT[nElectronHLTObjects]/O
superCluster/SuperClusterRef
double m() const override { return 5.109989e-4; }
double combiso() const override { return chiso + std::max(nhiso + phoiso - isoPUOffset, Float_t(0.)); }

[Muon>Lepton]
matchHLT[nMuonHLTObjects]/O
double m() const override { return 1.05658e-2; }
double combiso() const override { return chiso + std::max(nhiso + phoiso - 0.5 * puiso, 0.); }

[Tau>ParticleM]
q/S
baseline/O
decayMode/O
decayModeNew/O
iso/F
isoDeltaBetaCorr/F
matchedGen/GenParticleRef

[Photon>Particle]
scRawPt/F
chiso/F
chisoWorst/F
nhiso/F
phoiso/F
sieie/F
sipip/F
hOverE/F
geniso/F
mipEnergy/F
e33/F
e4/F
emax/F
e2nd/F
r9/F
etaWidth/F
phiWidth/F
time/F
timeSpan/F
genMatchDR/F
isEB/O
loose/O
medium/O
tight/O
highpt/O
pixelVeto/O
csafeVeto/O
matchL1[nPhotonL1Objects]/O
matchHLT[nPhotonHLTObjects]/O
superCluster/SuperClusterRef
matchedGen/GenParticleRef

[GenJet>ParticleM]
pdgid/I

[MicroJet>ParticleM]
csv/F
qgl/F
constituents/PFCandRefVector

[Jet>MicroJet]
rawPt/F
ptCorrUp/F
ptCorrDown/F
ptSmear/F
ptSmearUp/F
ptSmearDown/F
nhf/F
chf/F
loose/O
tight/O
monojet/O
matchedGenJet/GenJetRef

[FatJet>Jet]
tau1/F
tau2/F
tau3/F
mSD/F
tau1SD/F = -1.
tau2SD/F = -1.
tau3SD/F = -1.
htt_mass/F
htt_frec/F
ecfs[3][4][4]/F
subjets/MicroJetRefVector
double get_ecf(int o_, int N_, int ib_) const
{
  if (o_<1 || o_>3 || N_<1 || N_>4 || ib_<0 || ib_>3) 
    return -1.;
  return ecfs[o_-1][N_-1][ib_];
}
bool set_ecf(int o_, int N_, int ib_, float x_)
{
  if (o_<1 || o_>3 || N_<1 || N_>4 || ib_<0 || ib_>3) 
    return false;
  ecfs[o_-1][N_-1][ib_] = x_;
  return true;
}

[MET:SINGLE]
pt/F
phi/F
virtual TVector2 v() const { TVector2 vec; vec.SetMagPhi(pt, phi); return vec; }
void setXY(double x, double y) { pt = std::sqrt(x * x + y * y); phi = std::atan2(y, x); }

[RecoMET>MET]
sumETRaw/F
ptCorrUp/F
phiCorrUp/F
ptCorrDown/F
phiCorrDown/F
ptUnclUp/F
phiUnclUp/F
ptUnclDown/F
phiUnclDown/F
ptSmear/F
phiSmear/F
ptSmearUp/F
phiSmearUp/F
ptSmearDown/F
phiSmearDown/F
virtual TVector2 vCorr(int corr = 0) const
{
  if (corr == 0)
    return v();

  TVector2 vec;
  switch (corr) {
  case 1:
    vec.SetMagPhi(ptCorrUp, phiCorrUp);
    break;
  case -1:
    vec.SetMagPhi(ptCorrDown, phiCorrDown);
    break;
  }
  return vec;
}

[METFilters:SINGLE]
cschalo/O
globalHalo16/O
hbhe/O
hbheIso/O
ecalDeadCell/O
badsc/O
badTrack/O
badMuonTrack/O
virtual bool pass() const { return !globalHalo16 && !hbhe && !hbheIso && !ecalDeadCell && !badsc && !badTrack && !badMuonTrack; }

[HLTBits:SINGLE]
words[16]/i
void set(unsigned iB) { words[iB / 32] |= (1 << (iB % 32)); }
bool pass(unsigned iB) const { return ((words[iB / 32] >> (iB % 32)) & 1) != 0; }

[GenReweight:SINGLE]
r1f2/F
r1f5/F
r2f1/F
r2f2/F
r5f1/F
r5f5/F
pdf/F
genParam[128]/F

{Event}
runNumber/i
lumiNumber/i
eventNumber/i
isData/O
npv/s
npvTrue/s
rho/F
rhoCentralCalo/F
weight/F
genReweight/GenReweight
pfCandidates/PFCandCollection(256)
superClusters/SuperClusterCollection(64)
electrons/ElectronCollection(32)
muons/MuonCollection(32)
taus/TauCollection(64)
photons/PhotonCollection(32)
chsAK4Jets/JetCollection(64)
puppiAK4Jets/JetCollection(64)
chsAK8Jets/FatJetCollection(8)
chsCA15Jets/FatJetCollection(8)
puppiAK8Jets/FatJetCollection(8)
puppiCA15Jets/FatJetCollection(8)
subjets/MicroJetCollection(64)
genJets/GenJetCollection(64)
genParticles/GenParticleCollection(128)
met/RecoMET
puppiMet/RecoMET
rawMet/MET
caloMet/MET
noMuMet/MET
noHFMet/MET
trkMet/MET
neutralMet/MET
photonMet/MET
hfMet/MET
genMet/MET
metFilters/METFilters
triggers/HLTBits
electrons.superCluster->superClusters
electrons.matchedGen->genParticles
muons.matchedGen->genParticles
taus.matchedGen->genParticles
photons.superCluster->superClusters
photons.matchedGen->genParticles
genParticles.parent->genParticles
chsAK4Jets.constituents->pfCandidates
chsAK4Jets.matchedGenJet->genJets
puppiAK4Jets.constituents->pfCandidates
puppiAK4Jets.matchedGenJet->genJets
chsAK8Jets.constituents->pfCandidates
chsAK8Jets.subjets->subjets
chsCA15Jets.constituents->pfCandidates
chsCA15Jets.subjets->subjets
puppiAK8Jets.constituents->pfCandidates
puppiAK8Jets.subjets->subjets
puppiCA15Jets.constituents->pfCandidates
puppiCA15Jets.subjets->subjets
subjets.constituents->pfCandidates
double reweight(UInt_t i) const { return 1. + reweightDW[i]; }

{Run}
run/i
hltMenu/i
